$date
	Sat May  8 21:59:34 2021
$end

$version
	Synopsys VCS version R-2020.12
$end

$timescale
	1ns
$end

$comment Csum: 1 402ff56fd3bb274a $end


$scope module rushi $end
$upscope $end


$scope module top $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var wire 1 # startout $end

$scope begin unnamed$$_vcs_4 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope module int_f $end
$var reg 1 $ clk $end
$var reg 1 % pushin $end
$var reg 9 & datain [8:0] $end
$var reg 1 ' startin $end
$var reg 1 ( pushout $end
$var reg 10 ) dataout [9:0] $end
$var reg 1 * startout $end
$var reg 5 + datain_size [4:0] $end
$var reg 1 , reset $end
$upscope $end


$scope module enc $end
$var wire 1 - clk $end
$var wire 1 . reset $end
$var wire 1 / pushin $end
$var wire 9 0 datain [8:0] $end
$var wire 1 1 startin $end
$var reg 1 2 pushout $end
$var wire 10 3 dataout [9:0] $end
$var reg 1 4 startout $end
$var wire 1 5 Kbit $end
$var wire 1 6 RD $end
$var wire 32 7 crcResult [31:0] $end
$var reg 32 8 crcData [31:0] $end
$var wire 10 9 outTemp [9:0] $end
$var wire 10 : kcode [9:0] $end
$var wire 10 ; kcodeCRC0 [9:0] $end
$var wire 10 < kcodeCRC1 [9:0] $end
$var wire 10 = firstCRC [9:0] $end
$var wire 10 > secondCRC [9:0] $end
$var wire 10 ? thirdCRC [9:0] $end
$var wire 10 @ fourthCRC [9:0] $end
$var reg 10 A trueOutput [9:0] $end
$var reg 4 B counterK281 [3:0] $end
$var reg 4 C counterK285 [3:0] $end
$var reg 2 D currentState [1:0] $end
$var reg 2 E nextState [1:0] $end

$scope function rearrange $end
$var reg 10 F rearrange [9:0] $end
$var reg 10 G data [9:0] $end
$var integer 32 H i $end
$upscope $end


$scope module rd $end
$var wire 1 - clk $end
$var wire 1 . reset $end
$var wire 1 1 startin $end
$var wire 10 A dataout [9:0] $end
$var wire 1 2 pushout $end
$var reg 1 6 RDout $end
$var reg 1 I currentState $end
$var reg 1 J nextState $end

$scope function countOnes $end
$var reg 2 K countOnes [1:0] $end
$var reg 10 L data [9:0] $end
$var reg 4 M ones [3:0] $end
$var reg 4 N zeros [3:0] $end
$var integer 32 O i $end
$upscope $end

$upscope $end


$scope module ec0 $end
$var wire 5 P datain [4:0] $end
$var wire 1 Q RD $end
$var wire 6 R dataout [5:0] $end
$var reg 6 S abcdei_d [5:0] $end
$upscope $end


$scope module ec1 $end
$var wire 3 T datain [2:0] $end
$var wire 1 U RD $end
$var wire 4 V dataout [3:0] $end
$var reg 4 W fghj_d [3:0] $end
$upscope $end


$scope module ec2 $end
$var wire 5 X datain [4:0] $end
$var wire 1 Q RD $end
$var wire 6 Y dataout [5:0] $end
$var reg 6 Z abcdei_d [5:0] $end
$upscope $end


$scope module ec3 $end
$var wire 3 [ datain [2:0] $end
$var wire 1 U RD $end
$var wire 4 \ dataout [3:0] $end
$var reg 4 ] fghj_d [3:0] $end
$upscope $end


$scope module ec4 $end
$var wire 5 ^ datain [4:0] $end
$var wire 1 Q RD $end
$var wire 6 _ dataout [5:0] $end
$var reg 6 ` abcdei_d [5:0] $end
$upscope $end


$scope module ec5 $end
$var wire 3 a datain [2:0] $end
$var wire 1 U RD $end
$var wire 4 b dataout [3:0] $end
$var reg 4 c fghj_d [3:0] $end
$upscope $end


$scope module ec6 $end
$var wire 5 d datain [4:0] $end
$var wire 1 Q RD $end
$var wire 6 e dataout [5:0] $end
$var reg 6 f abcdei_d [5:0] $end
$upscope $end


$scope module ec7 $end
$var wire 3 g datain [2:0] $end
$var wire 1 U RD $end
$var wire 4 h dataout [3:0] $end
$var reg 4 i fghj_d [3:0] $end
$upscope $end


$scope module ec8 $end
$var wire 5 j datain [4:0] $end
$var wire 1 Q RD $end
$var wire 6 k dataout [5:0] $end
$var reg 6 l abcdei_d [5:0] $end
$upscope $end


$scope module ec9 $end
$var wire 3 m datain [2:0] $end
$var wire 1 U RD $end
$var wire 4 n dataout [3:0] $end
$var reg 4 o fghj_d [3:0] $end
$upscope $end


$scope module kc0 $end
$var wire 8 p datain [7:0] $end
$var wire 1 Q RD $end
$var wire 10 : dataout [9:0] $end
$var reg 10 q outTemp [9:0] $end
$upscope $end


$scope module kc1 $end
$var wire 8 r datain [7:0] $end
$var wire 1 Q RD $end
$var wire 10 ; dataout [9:0] $end
$var reg 10 s outTemp [9:0] $end
$upscope $end


$scope module kc2 $end
$var wire 8 t datain [7:0] $end
$var wire 1 Q RD $end
$var wire 10 < dataout [9:0] $end
$var reg 10 u outTemp [9:0] $end
$upscope $end


$scope module crc0 $end
$var wire 1 - clk $end
$var wire 1 . rst $end
$var wire 8 p crc32_in [7:0] $end
$var wire 1 / pushin $end
$var wire 32 7 crc32_out [31:0] $end
$var reg 32 v crc32_out_buff [31:0] $end
$var reg 32 w crc32_table [31:0] $end
$var wire 8 x crc32_lut_in [7:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module uvm_pkg $end
$var reg 32 y UVM_UNBOUNDED_CONNECTIONS [31:0] $end
$var reg 1 z uvm_start_uvm_declarations $end
$var reg 32 { uvm_global_random_seed [31:0] $end
$upscope $end

$enddefinitions $end

#0
$dumpvars
1z
b11111111111111111111111111111111 y
b01000010000001111100110001000111 {
0!
1"
0#
b10100 +
b0000000000 )
b000000000 &
05
06
02
0I
0J
04
b11 K
b0000000000 L
b00000000000000000000000000001010 O
bxxxx M
bxxxx N
b0000 B
b0000 C
b11111111 x
b11111111111111111111111111111111 v
b00101101000000101110111110001101 w
b00000000000000000000000000000000 8
b00000000000000000000000000000000 7
b00 D
b00 E
bxxxxxxxxxx G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx H
bxxxxxxxxxx F
b0000000000 A
b100111 S
b0100 W
b100111 Z
b0100 ]
b100111 `
b0100 c
b100111 f
b0100 i
b100111 l
b0100 o
b0000000000 q
b0011111010 s
b1110101000 u
1.
b000000000 0
b0000000000 3
b1001110100 9
b100111 R
b0100 V
b1001110100 =
b100111 Y
b0100 \
b1001110100 >
b100111 _
b0100 b
b1001110100 ?
b100111 e
b0100 h
b1001110100 @
b100111 k
b0100 n
0Q
1U
b00000 X
b000 [
b00000 ^
b000 a
b00000 d
b000 g
b00000 j
b000 m
b0000000000 :
b10111100 r
b0011111010 ;
b11110111 t
b1110101000 <
0%
0(
x'
x*
0/
x1
0$
0-
1,
b00000000 p
b00000 P
b000 T
$end
#4
0"
0,
0.
#5
1!
1-
1$
1'
11
b100111100 &
b100111100 0
15
b001 T
b11100 P
b00111100 p
b11000011 x
1%
1/
12
1(
14
1#
b0000000000 F
b00000000000000000000000000001010 H
b0000000000 G
b1001 W
b1001 V
b001111 S
b001111 R
b00000010011011011001001100001010 w
b0011111001 q
b0011111001 :
b0011111001 9
b1001111100 A
b1001111100 3
b1001111100 )
b1001111100 F
b0011111001 G
b1001111100 L
#10
0!
0-
0$
#15
1!
1-
1$
b0001 B
b00000010100100100110110011110101 v
b11111101011011011001001100001010 7
b11001001 x
0'
01
04
0#
b11100010101110000111101000010100 w
#20
0!
0-
0$
#25
1!
1-
1$
b0010 B
b11100010101110101110100001111000 v
b00011101010001010001011110000111 7
b01000100 x
b01110001101100011000010110001001 w
#30
0!
0-
0$
#35
1!
1-
1$
b0011 B
b01110001010100110011111101100001 v
b10001110101011001100000010011110 7
b01011101 x
b01 E
b00010101110110100010110101001001 w
#40
0!
0-
0$
#45
1!
1-
1$
b0100 B
b01 D
b00010101101010110111111001110110 v
b11101010010101001000000110001001 7
b01001010 x
b011101011 &
b011101011 0
05
b111 T
b01011 P
b11101011 p
b10011101 x
b10 E
b11101010010101001000000110001001 8
b01001 X
b100 [
b00001 ^
b100 a
b10100 d
b010 g
b01010 j
b111 m
b10001110101111101110111111111001 w
b0001 W
b0001 V
b110100 S
b110100 R
b0000000000 q
b0000000000 :
b1101000001 9
b100101 Z
b100101 Y
b0010 ]
b0010 \
b011101 `
b011101 _
b0010 c
b0010 b
b001011 f
b001011 e
b0101 i
b0101 h
b010101 l
b010101 k
b0001 o
b0001 n
b1000001011 A
b1000001011 3
b1000001011 )
b1000001011 F
b1101000001 G
b1001010010 =
b0111010010 >
b0010110101 ?
b0101010001 @
b1000001011 L
#50
0!
0-
0$
#55
1!
1-
1$
b0000 B
b10 D
b10001110101010110100010010000111 v
b01110001010101001011101101111000 7
b01101100 x
b110111100 &
b110111100 0
15
b101 T
b11100 P
b10111100 p
b00111011 x
b0001010111 A
b0001010111 3
b0001010111 )
b0001010111 F
b1110101000 G
b10110001000010111110100100100100 w
b1010 W
b1010 V
b001111 S
b001111 R
b0011111010 q
b0011111010 :
b0011111010 9
b0001010111 L
#60
0!
0-
0$
#65
1!
1-
1$
b0001 C
b10110001100001010100001001100000 v
b01001110011110101011110110011111 7
b11011100 x
0%
0/
b0100101001 A
b0100101001 3
b0100101001 )
b0100101001 F
b1001010010 G
b10001111011001011001111011111111 w
b0100101001 L
#70
0!
0-
0$
#75
1!
1-
1$
b0010 C
b0100101110 A
b0100101110 3
b0100101110 )
b0100101110 F
b0111010010 G
b0100101110 L
#80
0!
0-
0$
#85
1!
1-
1$
b0011 C
b1010110100 A
b1010110100 3
b1010110100 )
b1010110100 F
b0010110101 G
b1010110100 L
#90
0!
0-
0$
#95
1!
1-
1$
b0100 C
b1000101010 A
b1000101010 3
b1000101010 )
b1000101010 F
b0101010001 G
b1000101010 L
#100
0!
0-
0$
#105
1!
1-
1$
b0101 C
b00 E
b0101111100 A
b0101111100 3
b0101111100 )
b00000000000000000000000000000000 8
b00000 X
b000 [
b00000 ^
b000 a
b00000 d
b000 g
b00000 j
b000 m
b0101111100 F
b0011111010 G
b0101111100 L
b100111 Z
b100111 Y
b0100 ]
b0100 \
b100111 `
b100111 _
b0100 c
b0100 b
b100111 f
b100111 e
b0100 i
b0100 h
b100111 l
b100111 k
b0100 o
b0100 n
b1001110100 =
b1001110100 >
b1001110100 ?
b1001110100 @
#110
0!
0-
0$
#115
1!
1-
1$
b0110 C
b00 D
b0000000000 A
b0000000000 3
b0000000000 )
02
0(
b0000000000 L
#120
0!
0-
0$
#125
1!
1-
1$
b0000 C
#130
0!
0-
0$
#135
1!
1-
1$
#140
0!
0-
0$
#145
1!
1-
1$
#150
0!
0-
0$
#155
1!
1-
1$
